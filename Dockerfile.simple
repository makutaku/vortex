# Simple Dockerfile using traditional pip (no uv dependency)
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    cron \
    tini \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Create app user and directories
RUN useradd -m -r vortex && \
    mkdir -p /app /data /config

# Set working directory
WORKDIR /app

# Copy project files
COPY pyproject.toml setup.py README.md ./
COPY src/ ./src/
COPY docker/entrypoint.sh /app/
COPY docker/ping.sh /app/
COPY assets/ /app/assets/

# Install Python dependencies
RUN pip install --no-cache-dir -e .

# Make scripts executable
RUN chmod +x /app/entrypoint.sh /app/ping.sh

# Default environment variables
ENV BCU_PROVIDER=barchart \
    BCU_OUTPUT_DIR=/data \
    BCU_CONFIG_DIR=/config \
    BCU_ASSETS_FILE=/config/assets.json \
    BCU_SCHEDULE="0 8 * * *" \
    BCU_RUN_ON_STARTUP=True \
    BCU_DOWNLOAD_ARGS=""

# Volume mounts
VOLUME ["/data", "/config"]

# Stay as root for cron, but set permissions
RUN chown -R vortex:vortex /app /data /config

# Use tini as init system
ENTRYPOINT ["/usr/bin/tini", "--", "/app/entrypoint.sh"]