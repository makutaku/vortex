[project]
name = "vortex"
version = "0.1.3"
description = "Financial data automation tool for multiple providers (Barchart, Yahoo Finance, Interactive Brokers)"
authors = [{name = "Andy Geach", email = "andy@bugorfeature.net"}]
license = {text = "BSD-3-Clause"}
readme = "README.md"
requires-python = ">=3.9"
keywords = ["trading", "finance", "data", "automation", "barchart", "yahoo", "ibkr"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
    "License :: OSI Approved :: BSD License",
]
dependencies = [
    # Core HTTP and networking
    "requests>=2.31.0,<3.0",
    
    # Data processing and analysis
    "numpy>=1.19.4,<2.0",
    "pandas>=2.1.4,<3.0",
    "pyarrow>=14.0.0",
    "scipy>=1.10.0",
    
    # Web scraping and parsing
    "beautifulsoup4>=4.12.0",
    
    # Date/time handling
    "pytz>=2023.3",
    
    # Trading platform integration
    "ib-insync>=0.9.86,<1.0",
    "yfinance>=0.2.18",
    
    # Utilities and retry logic
    "retrying>=1.3.4",
    
    # CLI framework and UI
    "click>=8.0.0,<9.0",
    "rich>=13.0.0,<14.0",
    
    # Configuration management
    "tomli>=2.0.0;python_version<'3.11'",
    "tomli-w>=1.0.0,<2.0",
    "pydantic>=2.5.0,<3.0",
    "pydantic-settings>=2.1.0,<3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<8.0",
    "flake8>=6.0.0,<7.0",
]
test = [
    "pytest>=7.4.0,<8.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    "freezegun>=1.2.0",
]
lint = [
    "flake8>=6.0.0,<7.0",
    "black>=23.0.0,<24.0",
    "isort>=5.12.0,<6.0",
]

[project.urls]
Homepage = "https://github.com/makutaku/vortex"
Repository = "https://github.com/makutaku/vortex"
Issues = "https://github.com/makutaku/vortex/issues"

[project.scripts]
vortex = "vortex.cli.main:cli"


[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

# UV-specific configuration
[tool.uv]
# UV will respect pyproject.toml dependencies
# No additional configuration needed - uv works out of the box

[tool.uv.sources]
# Optional: specify custom sources if needed
# vortex = { path = "." }

[tool.setuptools]
# Ensure setuptools finds packages correctly for uv
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
include = ["vortex*"]

[tool.setuptools.package-data]
vortex = ["py.typed"]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.2"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src/vortex",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests that may take time",
    "network: Tests that require network access",
    "credentials: Tests that require valid provider credentials",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/vortex"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/cli/main.py",  # CLI entry point
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
